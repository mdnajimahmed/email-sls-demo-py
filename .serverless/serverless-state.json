{
  "service": {
    "service": "email",
    "serviceObject": {
      "name": "email"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "stage": "staging",
      "region": "ap-southeast-1",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "sqs:DeleteMessage",
            "sqs:GetQueueAttributes",
            "sqs:ReceiveMessage"
          ],
          "Resource": {
            "Fn::GetAtt": [
              "EmailQueueDemo",
              "Arn"
            ]
          }
        },
        {
          "Effect": "Allow",
          "Action": [
            "sqs:DeleteMessage",
            "sqs:GetQueueAttributes",
            "sqs:ReceiveMessage"
          ],
          "Resource": {
            "Fn::GetAtt": [
              "EmailQueueDemoDLQ",
              "Arn"
            ]
          }
        },
        {
          "Effect": "Allow",
          "Action": [
            "ses:SendEmail",
            "ses:SendRawEmail"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject"
          ],
          "Resource": {
            "Fn::Join": [
              "",
              [
                "arn:aws:s3:::",
                {
                  "Ref": "EmailAttachmentMediator"
                },
                "/*"
              ]
            ]
          }
        }
      ],
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "MainDashhandlerDashpyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/email-main-handler-py",
              "RetentionInDays": 30
            }
          },
          "FallbackDashhandlerDashpyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/email-staging-fallback-handler-py",
              "RetentionInDays": 30
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "email",
                        "staging",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/email-main-handler-py:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/email-staging*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/email-main-handler-py:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/email-staging*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "EmailQueueDemo",
                              "Arn"
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "EmailQueueDemoDLQ",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "email",
                    "staging",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "MainDashhandlerDashpyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/email/staging/1614939316224-2021-03-05T10:15:16.224Z/email.zip"
              },
              "Handler": "src/email/handler.email_handler",
              "Runtime": "python3.8",
              "FunctionName": "email-main-handler-py",
              "MemorySize": 1024,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "MainDashhandlerDashpyLogGroup"
            ]
          },
          "MainDashhandlerDashpyLambdaVersionqKyCzaG7L8fRvOiGyMqDYXDFk0S6l5YsevRG0YjzW4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MainDashhandlerDashpyLambdaFunction"
              },
              "CodeSha256": "NntxD7nf5U52ntb6rwDZs6DwNlC2F8bn8r3xkBqeOm4="
            }
          },
          "FallbackDashhandlerDashpyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/email/staging/1614939316224-2021-03-05T10:15:16.224Z/email.zip"
              },
              "Handler": "src/email/handler.email_handler_fallback",
              "Runtime": "python3.8",
              "FunctionName": "email-staging-fallback-handler-py",
              "MemorySize": 1024,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FallbackDashhandlerDashpyLogGroup"
            ]
          },
          "FallbackDashhandlerDashpyLambdaVersionq25vBGDgDXGYv4Ul1zxivuQCj93PoxOHyy0YZB6TI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FallbackDashhandlerDashpyLambdaFunction"
              },
              "CodeSha256": "NntxD7nf5U52ntb6rwDZs6DwNlC2F8bn8r3xkBqeOm4="
            }
          },
          "MainDashhandlerDashpyEventSourceMappingSQSEmailQueueDemo": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 1,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "EmailQueueDemo",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "MainDashhandlerDashpyLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "FallbackDashhandlerDashpyEventSourceMappingSQSEmailQueueDemoDLQ": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 1,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "EmailQueueDemoDLQ",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "FallbackDashhandlerDashpyLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "EmailQueueDemo": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "EmailQueueDemo",
              "MessageRetentionPeriod": 1209600,
              "VisibilityTimeout": 60,
              "RedrivePolicy": {
                "deadLetterTargetArn": {
                  "Fn::GetAtt": [
                    "EmailQueueDemoDLQ",
                    "Arn"
                  ]
                },
                "maxReceiveCount": 2
              }
            }
          },
          "EmailQueueDemoDLQ": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "EmailQueueDemoDLQ",
              "MessageRetentionPeriod": 1209600,
              "VisibilityTimeout": 90
            }
          },
          "EmailAttachmentMediator": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "email-attachment-mediator",
              "LifecycleConfiguration": {
                "Rules": [
                  {
                    "Id": "DefaultRule",
                    "Status": "Enabled",
                    "ExpirationInDays": "30"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "MainDashhandlerDashpyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MainDashhandlerDashpyLambdaVersionqKyCzaG7L8fRvOiGyMqDYXDFk0S6l5YsevRG0YjzW4"
            }
          },
          "FallbackDashhandlerDashpyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FallbackDashhandlerDashpyLambdaVersionq25vBGDgDXGYv4Ul1zxivuQCj93PoxOHyy0YZB6TI"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "config": {
        "TEST": "TEST"
      },
      "pythonRequirements": {
        "dockerizePip": true
      },
      "logRetentionInDays": 30
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-offline",
      "serverless-plugin-log-retention"
    ],
    "pluginsData": {},
    "functions": {
      "main-handler-py": {
        "handler": "src/email/handler.email_handler",
        "name": "email-main-handler-py",
        "timeout": 10,
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][6][\"Resource\"][0]"
              },
              "batchSize": 1
            }
          }
        ],
        "package": {},
        "memory": 1024,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "MainDashhandlerDashpyLambdaVersionqKyCzaG7L8fRvOiGyMqDYXDFk0S6l5YsevRG0YjzW4"
      },
      "fallback-handler-py": {
        "handler": "src/email/handler.email_handler_fallback",
        "timeout": 10,
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][7][\"Resource\"][0]"
              },
              "batchSize": 1
            }
          }
        ],
        "name": "email-staging-fallback-handler-py",
        "package": {},
        "memory": 1024,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "FallbackDashhandlerDashpyLambdaVersionq25vBGDgDXGYv4Ul1zxivuQCj93PoxOHyy0YZB6TI"
      }
    },
    "resources": {
      "Resources": {
        "EmailQueueDemo": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "EmailQueueDemo",
            "MessageRetentionPeriod": 1209600,
            "VisibilityTimeout": 60,
            "RedrivePolicy": {
              "deadLetterTargetArn": {
                "Fn::GetAtt": [
                  "EmailQueueDemoDLQ",
                  "Arn"
                ]
              },
              "maxReceiveCount": 2
            }
          }
        },
        "EmailQueueDemoDLQ": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "EmailQueueDemoDLQ",
            "MessageRetentionPeriod": 1209600,
            "VisibilityTimeout": 90
          }
        },
        "EmailAttachmentMediator": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "email-attachment-mediator",
            "LifecycleConfiguration": {
              "Rules": [
                {
                  "Id": "DefaultRule",
                  "Status": "Enabled",
                  "ExpirationInDays": "30"
                }
              ]
            }
          }
        },
        "MainDashhandlerDashpyLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "RetentionInDays": 30
          }
        },
        "FallbackDashhandlerDashpyLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "RetentionInDays": 30
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\personal\\email-sls-demo-py\\.serverless\\email.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/email/staging/1614939316224-2021-03-05T10:15:16.224Z",
    "artifact": "email.zip"
  }
}